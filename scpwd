#!/bin/bash

# scpwd : secure copy pwd
# 
# Quickly echo scp path including username@hostname and optional filename
# 
# >>>
# /etc/ $ scpwd
# me@myserver.example.tld:/etc
# /etc/ $ scpwd /opt/
# me@myserver.example.tld:/opt
# /etc/ $ scpwd my.conf
# me@myserver.example.tld:/etc/my.conf
# /etc/ $ scpwd /usr/local/etc/my.conf
# me@myserver.example.tld:/usr/local/etc/my.conf
# /etc/ $ scpwd ../usr/local/etc/my.conf
# me@myserver.example.tld:/usr/local/etc/my.conf
# <<<
# 
# Florian Sager, sager@agitos.de, 2021-02-25, MIT license


# Optional config file to override user@hostname by
# >>>
# LOGIN=someuser@someproxy.example.tld
# <<<
CONFIG_FILE=$HOME/.scpwd


function buildPwdFile {

	local PWDFILE=$1
	local BUILTPATH
	
	if [ -z "$PWDFILE" ]
	then
		BUILTPATH=`pwd`/
	else
		if [[ $PWDFILE == /* ]]
		then
	    	BUILTPATH=$PWDFILE
		else
			BUILTPATH=`pwd`/$PWDFILE
		fi
	fi
	
	if [[ ! -a "$BUILTPATH" ]]
	then
		>&2 echo "Warning: path does not exist"
	fi

	# echo $BUILTPATH
	realpath -m $BUILTPATH
}

function buildHostName {

	local DOMAIN=`hostname -d`
	if [ -z "$DOMAIN" ]
	then
		echo `hostname`
	else
		echo `hostname -f`
	fi
}

if [ -s $CONFIG_FILE ]
then
	. $CONFIG_FILE
	echo $LOGIN:$(buildPwdFile $1)
elif [ -z "$SSH_LOGIN_USER" ]
then
	echo $USER@$(buildHostName):$(buildPwdFile $1)
else
	echo $SSH_LOGIN_USER@$(buildHostName):$(buildPwdFile $1)
fi
