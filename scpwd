#!/usr/bin/env bash

# scpwd : secure copy pwd
# 
# Quickly echo scp path including username@hostname and optional filename
# 
# >>>
# /etc/ $ scpwd
# me@myserver.example.tld:/etc
# /etc/ $ scpwd /opt/
# me@myserver.example.tld:/opt
# /etc/ $ scpwd my.conf
# me@myserver.example.tld:/etc/my.conf
# /etc/ $ scpwd /usr/local/etc/my.conf
# me@myserver.example.tld:/usr/local/etc/my.conf
# /etc/ $ scpwd ../usr/local/etc/my.conf
# me@myserver.example.tld:/usr/local/etc/my.conf
# <<<
# 
# Florian Sager, sager@agitos.de, 2021-02-25, MIT license


# Optional config file to override user@hostname by
# >>>
# LOGIN=someuser@someproxy.example.tld
# <<<
CONFIG_FILE="$HOME/.scpwd"

set -euo pipefail

function buildPwdFile {

	local PWDFILE="$1"
	local BUILTPATH
	
	if [[ -z "$PWDFILE" ]]
	then
		BUILTPATH="`pwd`"
	else
		if [[ $PWDFILE == /* ]]
		then
			BUILTPATH="$PWDFILE"
		else
			BUILTPATH="`pwd`/$PWDFILE"
		fi
	fi
	
	if [[ ! -e "$BUILTPATH" ]]
	then
		>&2 echo "Warning: path does not exist"
	fi

	echo `realpath -m "$BUILTPATH"` | sed 's/ /\\\\\\\ /g'
}

function buildHostName {

	if [ -z `hostname -d` ]
	then
		hostname
	else
		hostname -f
	fi
}

PATHIN=${1:-}

if [[ -s "$CONFIG_FILE" ]]
then
	. "$CONFIG_FILE"
	echo $LOGIN:$(buildPwdFile "$PATHIN")
elif [[ -z "${SSH_LOGIN_USER:-}" ]]
then
	echo $USER@$(buildHostName):$(buildPwdFile "$PATHIN")
else
	echo $SSH_LOGIN_USER@$(buildHostName):$(buildPwdFile "$PATHIN")
fi
